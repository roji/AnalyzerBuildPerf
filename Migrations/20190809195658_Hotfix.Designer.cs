// <auto-generated />
using System;
using Bolstra.Api.Models.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Bolstra.Migrations
{
    [DbContext(typeof(BolstraDb))]
    [Migration("20190809195658_Hotfix")]
    partial class Hotfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Bolstra.Api.Models.AccountCustomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<byte[]>("EncryptedData")
                        .HasColumnName("encrypted_data")
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("account_custom_data_pkey");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasName("ix_account_custom_data_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_custom_data_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_custom_data_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_custom_data_last_modified_by");

                    b.ToTable("account_custom_data","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.AccountPriority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("account_priority_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_priority_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_priority_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_priority_last_modified_by");

                    b.ToTable("account_priority","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccessLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("ErrorMessage")
                        .HasColumnName("error_message")
                        .HasMaxLength(100);

                    b.Property<string>("IpAddress")
                        .HasColumnName("ip_address")
                        .HasMaxLength(50);

                    b.Property<bool>("Success")
                        .HasColumnName("success");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .HasColumnName("user_agent")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("access_log_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_access_log_company_id");

                    b.HasIndex("UserId")
                        .HasName("ix_access_log_user_id");

                    b.ToTable("access_log","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AccountOwnerId")
                        .HasColumnName("account_owner_id");

                    b.Property<long>("AccountPriorityId")
                        .HasColumnName("account_priority_id");

                    b.Property<string>("AddressString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<double>("ArrSum")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("arr_sum");

                    b.Property<double?>("ChildWeight")
                        .HasColumnName("child_weight");

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasMaxLength(7);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("Goals")
                        .HasColumnName("goals")
                        .HasColumnType("text");

                    b.Property<string>("IntegrationKey_1")
                        .HasColumnName("integration_key_1")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_2")
                        .HasColumnName("integration_key_2")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_3")
                        .HasColumnName("integration_key_3")
                        .HasMaxLength(128);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double>("MrrSum")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("mrr_sum");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(225);

                    b.Property<DateTimeOffset?>("NextRenewalDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("next_renewal_date");

                    b.Property<long?>("ParentId")
                        .HasColumnName("parent_id");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(40);

                    b.Property<string>("SalesforceId")
                        .HasColumnName("salesforce_id")
                        .HasMaxLength(18);

                    b.Property<string>("SocialProfilesString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("social_profiles")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(10);

                    b.Property<long[]>("Team")
                        .HasColumnName("team");

                    b.Property<string>("Timezone")
                        .HasColumnName("timezone")
                        .HasMaxLength(100);

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("account_pkey");

                    b.HasIndex("AccountOwnerId")
                        .HasName("ix_account_account_owner_id");

                    b.HasIndex("AccountPriorityId")
                        .HasName("ix_account_account_priority_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_last_modified_by");

                    b.HasIndex("ParentId")
                        .HasName("ix_account_parent_id");

                    b.ToTable("account","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountCustomAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("CustomAttributeSectionId")
                        .HasColumnName("account_custom_attribute_section_id");

                    b.Property<string>("DefinitionString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("definition")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnName("field")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("account_custom_attribute_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_custom_attribute_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_custom_attribute_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_custom_attribute_last_modified_by");

                    b.ToTable("account_custom_attribute","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountCustomAttributeSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("account_custom_attribute_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_custom_attribute_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_custom_attribute_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_custom_attribute_section_last_modified_by");

                    b.ToTable("account_custom_attribute_section","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountFilter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPublic")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_public")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.Property<bool>("SaveColumns")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("save_columns")
                        .HasDefaultValue(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(25);

                    b.HasKey("Id")
                        .HasName("account_filter_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_filter_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_filter_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_filter_last_modified_by");

                    b.ToTable("account_filter","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountPopulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("account_population_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_population_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_population_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_population_last_modified_by");

                    b.ToTable("account_population","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<string>("AddressString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasMaxLength(7);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Department")
                        .HasColumnName("department")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasMaxLength(40);

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<string>("IntegrationKey_1")
                        .HasColumnName("integration_key_1")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_2")
                        .HasColumnName("integration_key_2")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_3")
                        .HasColumnName("integration_key_3")
                        .HasMaxLength(128);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsFrequent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_frequent")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsServiceUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_service_user")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasMaxLength(80);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasMaxLength(500);

                    b.Property<string>("PhoneCell")
                        .HasColumnName("phone_cell")
                        .HasMaxLength(40);

                    b.Property<string>("PhoneOffice")
                        .HasColumnName("phone_office")
                        .HasMaxLength(40);

                    b.Property<string>("SalesforceId")
                        .HasColumnName("salesforce_id")
                        .HasMaxLength(18);

                    b.Property<string>("Salutation")
                        .HasColumnName("salutation")
                        .HasMaxLength(100);

                    b.Property<string>("SocialProfilesString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("social_profiles")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(10);

                    b.Property<string>("Timezone")
                        .HasColumnName("timezone")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("account_user_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_user_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_user_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_user_last_modified_by");

                    b.HasIndex("AccountId", "Email")
                        .IsUnique()
                        .HasName("ix_account_user_account_id_email");

                    b.ToTable("account_user","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("CustomAttributeSectionId")
                        .HasColumnName("account_user_custom_attribute_section_id");

                    b.Property<string>("DefinitionString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("definition")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnName("field")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("account_user_custom_attribute_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_user_custom_attribute_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_user_custom_attribute_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_user_custom_attribute_last_modified_by");

                    b.ToTable("account_user_custom_attribute","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomAttributeSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("account_user_custom_attribute_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_user_custom_attribute_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_user_custom_attribute_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_user_custom_attribute_section_last_modified_by");

                    b.ToTable("account_user_custom_attribute_section","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AccountUserId")
                        .HasColumnName("account_user_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<byte[]>("EncryptedData")
                        .HasColumnName("encrypted_data")
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("account_user_custom_data_pkey");

                    b.HasIndex("AccountUserId")
                        .IsUnique()
                        .HasName("ix_account_user_custom_data_account_user_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_user_custom_data_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_user_custom_data_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_user_custom_data_last_modified_by");

                    b.ToTable("account_user_custom_data","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsFilter")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_filter")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ObjectType")
                        .HasColumnName("object_type")
                        .HasMaxLength(100);

                    b.Property<long?>("RefId")
                        .HasColumnName("ref_id");

                    b.HasKey("Id")
                        .HasName("layout_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_last_modified_by");

                    b.ToTable("layout","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayoutSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("LayoutId")
                        .HasColumnName("layout_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(225);

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.HasKey("Id")
                        .HasName("layout_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_section_last_modified_by");

                    b.HasIndex("LayoutId")
                        .HasName("ix_layout_section_layout_id");

                    b.ToTable("layout_section","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayoutSectionRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("LayoutSectionId")
                        .HasColumnName("layout_section_id");

                    b.Property<long?>("Left")
                        .HasColumnName("left");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<long?>("Right")
                        .HasColumnName("right");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("layout_section_row_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_section_row_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_section_row_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_section_row_last_modified_by");

                    b.HasIndex("LayoutSectionId")
                        .HasName("ix_layout_section_row_layout_section_id");

                    b.ToTable("layout_section_row","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AnalyticsJoinData", b =>
                {
                    b.Property<long>("DataReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data_reference_id");

                    b.Property<long?>("AnalyticsJoinKeyId")
                        .HasColumnName("analytics_join_key_id");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("DataReferenceId")
                        .HasName("analytics_join_data_pkey");

                    b.HasIndex("AnalyticsJoinKeyId")
                        .HasName("ix_analytics_join_data_analytics_join_key_id");

                    b.ToTable("analytics_join_data","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AnalyticsJoinKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("varchar");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset>("ValidUntil")
                        .HasColumnName("valid_until")
                        .HasColumnType("timestamptz");

                    b.HasKey("Id")
                        .HasName("analytics_join_key_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_analytics_join_key_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_analytics_join_key_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_analytics_join_key_last_modified_by");

                    b.ToTable("analytics_join_key","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long[]>("IntegrationInstances")
                        .HasColumnName("integration_instances");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastPollOn")
                        .HasColumnName("last_poll_on")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.Property<string>("QueueName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("queue_name")
                        .HasMaxLength(75)
                        .HasDefaultValue("");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnName("timezone")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("company_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_last_modified_by");

                    b.ToTable("company","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyDbConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long>("DbConfigId")
                        .HasColumnName("db_config_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("company_db_config_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_company_db_config_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_db_config_created_by");

                    b.HasIndex("DbConfigId")
                        .HasName("ix_company_db_config_db_config_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_db_config_last_modified_by");

                    b.ToTable("company_db_config","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<byte[]>("Key")
                        .HasColumnName("key")
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("company_key_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_company_key_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_key_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_key_last_modified_by");

                    b.ToTable("company_key","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasMaxLength(7);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<bool?>("EnableAnalytics")
                        .HasColumnName("enable_analytics");

                    b.Property<bool?>("EnableEmailLogging")
                        .HasColumnName("enable_email_logging");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPasswordExpired")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_password_expired")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsSaasAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_saas_admin")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsServiceUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_service_user")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("NylasAccountId")
                        .HasColumnName("nylas_account_id")
                        .HasMaxLength(100);

                    b.Property<bool?>("NylasRunning")
                        .HasColumnName("nylas_running");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasMaxLength(500);

                    b.Property<string[]>("PasswordHashHistory")
                        .HasColumnName("password_hash_history");

                    b.Property<DateTimeOffset?>("PasswordLastModifiedAt")
                        .HasColumnName("password_last_modified_at");

                    b.Property<long?>("PasswordMaxAge")
                        .HasColumnName("password_max_age");

                    b.Property<long>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("company_user_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_company_user_company_id");

                    b.HasIndex("RoleId")
                        .HasName("ix_company_user_role_id");

                    b.HasIndex("UserId")
                        .HasName("ix_company_user_user_id");

                    b.ToTable("company_user","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsAdmin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("PermissionsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("permissions")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("company_user_role_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_company_user_role_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_user_role_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_user_role_last_modified_by");

                    b.ToTable("company_user_role","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.DbConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("OptionsString")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("options")
                        .HasColumnType("json")
                        .HasDefaultValue("{}");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnName("service_name")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("url")
                        .HasMaxLength(1000);

                    b.HasKey("Id")
                        .HasName("db_config_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_db_config_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_db_config_last_modified_by");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_db_config_name");

                    b.ToTable("db_config","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Filter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<string>("ConfigurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("configuration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier")
                        .HasMaxLength(25);

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPublic")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_public")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.Property<bool>("SaveColumns")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("save_columns")
                        .HasDefaultValue(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(25);

                    b.HasKey("Id")
                        .HasName("filter_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_filter_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_filter_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_filter_last_modified_by");

                    b.ToTable("filter","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.LicensedModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("ModuleId")
                        .HasColumnName("module_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("licensed_modules_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_licensed_modules_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_licensed_modules_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_licensed_modules_last_modified_by");

                    b.HasIndex("ModuleId")
                        .HasName("ix_licensed_modules_module_id");

                    b.ToTable("licensed_modules","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("modules_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_modules_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_modules_last_modified_by");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_modules_name");

                    b.ToTable("modules","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<string>("AdditionalDataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("additional_data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool>("AllUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("all_users")
                        .HasDefaultValue(false);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnName("expiration")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Message")
                        .HasColumnName("message");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(30);

                    b.HasKey("Id")
                        .HasName("notification_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_notification_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_notification_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_notification_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_notification_last_modified_by");

                    b.ToTable("notification","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.NotificationRecipient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("CompanyUserId")
                        .HasColumnName("company_user_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("NotificationId")
                        .HasColumnName("notification_id");

                    b.Property<bool>("Read")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("read")
                        .HasDefaultValue(false);

                    b.HasKey("Id")
                        .HasName("notification_recipient_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_notification_recipient_company_id");

                    b.HasIndex("CompanyUserId")
                        .HasName("ix_notification_recipient_company_user_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_notification_recipient_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_notification_recipient_last_modified_by");

                    b.HasIndex("NotificationId")
                        .HasName("ix_notification_recipient_notification_id");

                    b.ToTable("notification_recipient","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.ServiceKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("PrivateKey")
                        .IsRequired()
                        .HasColumnName("private_key")
                        .HasMaxLength(250);

                    b.Property<string>("PublicKey")
                        .IsRequired()
                        .HasColumnName("public_key")
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("service_key_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_service_key_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_service_key_last_modified_by");

                    b.HasIndex("PublicKey")
                        .IsUnique()
                        .HasName("ix_service_key_public_key");

                    b.ToTable("service_key","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Auth0Id")
                        .HasColumnName("auth0_id")
                        .HasMaxLength(40);

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasMaxLength(7);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsSaasAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_saas_admin")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsServiceUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_service_user")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_user_created_by");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("ix_user_email");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_user_last_modified_by");

                    b.ToTable("user","admin");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AccountName", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("account_name_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_account_name_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_name_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_name_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_name_last_modified_by");

                    b.ToTable("account_name","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long?>("ActivityStatusId")
                        .HasColumnName("activity_status_id");

                    b.Property<long?>("ActivityTypeId")
                        .HasColumnName("activity_type_id");

                    b.Property<string>("AssignmentsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("assignments")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset?>("ClaimedAt")
                        .HasColumnName("claimed_at");

                    b.Property<DateTimeOffset?>("ClosedAt")
                        .HasColumnName("closed_at");

                    b.Property<long?>("CommunicationThreadId")
                        .HasColumnName("communication_thread_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<long?>("EngagementId")
                        .HasColumnName("engagement_id");

                    b.Property<double?>("EstimatedEffort")
                        .HasColumnName("estimated_effort");

                    b.Property<DateTimeOffset?>("ExpectedAt")
                        .HasColumnName("expected_at");

                    b.Property<string>("ExpectedDurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_duration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_archived")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long?>("OwnerId")
                        .HasColumnName("owner_id");

                    b.Property<double?>("Priority")
                        .HasColumnName("priority");

                    b.Property<long?>("SeriesId")
                        .HasColumnName("series_id");

                    b.Property<DateTimeOffset?>("SystemClosedAt")
                        .HasColumnName("system_closed_at");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("VisibleAt")
                        .HasColumnName("visible_at");

                    b.HasKey("Id")
                        .HasName("activity_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_activity_account_id");

                    b.HasIndex("ActivityStatusId")
                        .HasName("ix_activity_activity_status_id");

                    b.HasIndex("ActivityTypeId")
                        .HasName("ix_activity_activity_type_id");

                    b.HasIndex("CommunicationThreadId")
                        .HasName("ix_activity_communication_thread_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_created_by");

                    b.HasIndex("EngagementId")
                        .HasName("ix_activity_engagement_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_last_modified_by");

                    b.HasIndex("OwnerId")
                        .HasName("ix_activity_owner_id");

                    b.ToTable("activity","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityAssignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("activity_assignment_pkey");

                    b.HasIndex("ActivityId")
                        .HasName("ix_activity_assignment_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_assignment_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_assignment_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_assignment_last_modified_by");

                    b.HasIndex("UserId")
                        .HasName("ix_activity_assignment_user_id");

                    b.ToTable("activity_assignment","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityBoard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long[]>("RoleIds")
                        .HasColumnName("role_ids");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("activity_board_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_board_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_board_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_board_last_modified_by");

                    b.ToTable("activity_board","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("AccountUserId")
                        .HasColumnName("account_user_id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("activity_contact_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_activity_contact_account_id");

                    b.HasIndex("AccountUserId")
                        .HasName("ix_activity_contact_account_user_id");

                    b.HasIndex("ActivityId")
                        .HasName("ix_activity_contact_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_contact_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_contact_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_contact_last_modified_by");

                    b.ToTable("activity_contact","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("CustomAttributeSectionId")
                        .HasColumnName("activity_custom_attribute_section_id");

                    b.Property<string>("DefinitionString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("definition")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnName("field")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("activity_custom_attribute_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_custom_attribute_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_custom_attribute_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_custom_attribute_last_modified_by");

                    b.ToTable("activity_custom_attribute","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomAttributeSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("activity_custom_attribute_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_custom_attribute_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_custom_attribute_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_custom_attribute_section_last_modified_by");

                    b.ToTable("activity_custom_attribute_section","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("activity_custom_data_pkey");

                    b.HasIndex("ActivityId")
                        .IsUnique()
                        .HasName("ix_activity_custom_data_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_custom_data_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_custom_data_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_custom_data_last_modified_by");

                    b.ToTable("activity_custom_data","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityFilter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPublic")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_public")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.Property<bool>("SaveColumns")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("save_columns")
                        .HasDefaultValue(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(25);

                    b.HasKey("Id")
                        .HasName("activity_filter_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_filter_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_filter_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_filter_last_modified_by");

                    b.ToTable("activity_filter","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long>("LabelId")
                        .HasColumnName("label_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("activity_label_pkey");

                    b.HasIndex("ActivityId")
                        .HasName("ix_activity_label_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_label_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_label_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_label_last_modified_by");

                    b.ToTable("activity_label","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityLane", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityBoardId")
                        .HasColumnName("activity_board_id");

                    b.Property<long>("ActivityStatusId")
                        .HasColumnName("activity_status_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("activity_lane_pkey");

                    b.HasIndex("ActivityBoardId")
                        .HasName("ix_activity_lane_activity_board_id");

                    b.HasIndex("ActivityStatusId")
                        .HasName("ix_activity_lane_activity_status_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_lane_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_lane_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_lane_last_modified_by");

                    b.ToTable("activity_lane","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityPopulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("activity_population_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_population_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_population_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_population_last_modified_by");

                    b.ToTable("activity_population","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long[]>("AllowedTypes")
                        .HasColumnName("allowed_types");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Meaning")
                        .HasColumnName("meaning")
                        .HasMaxLength(20);

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("activity_status_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_status_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_status_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_status_last_modified_by");

                    b.ToTable("activity_status","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ChecklistString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("checklist")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("ExpectedDurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_duration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsTouchpoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_touchpoint")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Style")
                        .HasColumnName("style")
                        .HasMaxLength(7);

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<double?>("UnitsPerHour")
                        .HasColumnName("units_per_hour");

                    b.HasKey("Id")
                        .HasName("activity_type_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_activity_type_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_activity_type_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_activity_type_last_modified_by");

                    b.ToTable("activity_type","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AnalyticsJoinData", b =>
                {
                    b.Property<long>("DataReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data_reference_id");

                    b.Property<long?>("AnalyticsJoinKeyId")
                        .HasColumnName("analytics_join_key_id");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("DataReferenceId")
                        .HasName("analytics_join_data_pkey");

                    b.HasIndex("AnalyticsJoinKeyId")
                        .HasName("ix_analytics_join_data_analytics_join_key_id");

                    b.ToTable("analytics_join_data","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AnalyticsJoinKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("varchar");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset>("ValidUntil")
                        .HasColumnName("valid_until")
                        .HasColumnType("timestamptz");

                    b.HasKey("Id")
                        .HasName("analytics_join_key_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_analytics_join_key_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_analytics_join_key_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_analytics_join_key_last_modified_by");

                    b.ToTable("analytics_join_key","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Checklist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_complete")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("checklist_pkey");

                    b.HasIndex("ActivityId")
                        .HasName("ix_checklist_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_checklist_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_checklist_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_checklist_last_modified_by");

                    b.ToTable("checklist","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ChecklistModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("ExpectedActivityId")
                        .HasColumnName("expected_activity_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("checklist_model_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_checklist_model_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_checklist_model_created_by");

                    b.HasIndex("ExpectedActivityId")
                        .HasName("ix_checklist_model_expected_activity_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_checklist_model_last_modified_by");

                    b.ToTable("checklist_model","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnName("label")
                        .HasMaxLength(20);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("color")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("color_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_color_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_color_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_color_last_modified_by");

                    b.ToTable("color","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CommunicationThread", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("EngagementId")
                        .HasColumnName("engagement_id");

                    b.Property<string>("ExternalThreadId")
                        .HasColumnName("external_thread_id")
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("communication_thread_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_communication_thread_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_communication_thread_created_by");

                    b.HasIndex("EngagementId")
                        .HasName("ix_communication_thread_engagement_id");

                    b.HasIndex("ExternalThreadId")
                        .HasName("ix_communication_thread_external_thread_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_communication_thread_last_modified_by");

                    b.ToTable("communication_thread","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CompanyKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<byte[]>("Key")
                        .HasColumnName("key")
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("company_key_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_company_key_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_key_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_key_last_modified_by");

                    b.ToTable("company_key","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CompanySetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("SettingsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("settings")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("company_setting_pkey");

                    b.HasIndex("CompanyId")
                        .IsUnique()
                        .HasName("ix_company_setting_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_company_setting_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_company_setting_last_modified_by");

                    b.ToTable("company_setting","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountContactId")
                        .HasColumnName("account_contact_id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<double?>("ContractValue")
                        .HasColumnName("contract_value");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<int?>("DurationMonths")
                        .HasColumnName("duration_months");

                    b.Property<string>("IntegrationKey_1")
                        .HasColumnName("integration_key_1")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_2")
                        .HasColumnName("integration_key_2")
                        .HasMaxLength(128);

                    b.Property<string>("IntegrationKey_3")
                        .HasColumnName("integration_key_3")
                        .HasMaxLength(128);

                    b.Property<string>("InvoiceCycle")
                        .HasColumnName("invoice_cycle")
                        .HasMaxLength(15);

                    b.Property<bool?>("IsExpired")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_expired")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("MrrValue")
                        .HasColumnName("mrr_value");

                    b.Property<double?>("ProbabilityOfPayment")
                        .HasColumnName("probability_of_payment");

                    b.Property<double?>("ProbabilityOfRenewal")
                        .HasColumnName("probability_of_renewal");

                    b.Property<double?>("ProjectedMrrExpansion")
                        .HasColumnName("projected_mrr_expansion");

                    b.Property<DateTimeOffset?>("RenewedAt")
                        .HasColumnName("renewed_at");

                    b.Property<string>("SalesforceId")
                        .HasColumnName("salesforce_id")
                        .HasMaxLength(18);

                    b.Property<DateTimeOffset?>("SignedAt")
                        .HasColumnName("signed_at");

                    b.Property<DateTimeOffset?>("StartedAt")
                        .HasColumnName("started_at");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("contract_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_contract_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_last_modified_by");

                    b.ToTable("contract","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("CustomAttributeSectionId")
                        .HasColumnName("contract_custom_attribute_section_id");

                    b.Property<string>("DefinitionString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("definition")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnName("field")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("contract_custom_attribute_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_custom_attribute_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_custom_attribute_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_custom_attribute_last_modified_by");

                    b.ToTable("contract_custom_attribute","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomAttributeSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("contract_custom_attribute_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_custom_attribute_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_custom_attribute_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_custom_attribute_section_last_modified_by");

                    b.ToTable("contract_custom_attribute_section","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContractId")
                        .HasColumnName("contract_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<byte[]>("EncryptedData")
                        .HasColumnName("encrypted_data")
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("contract_custom_data_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_custom_data_company_id");

                    b.HasIndex("ContractId")
                        .IsUnique()
                        .HasName("ix_contract_custom_data_contract_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_custom_data_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_custom_data_last_modified_by");

                    b.ToTable("contract_custom_data","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountContactId")
                        .HasColumnName("account_contact_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContractId")
                        .HasColumnName("contract_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<int?>("DurationMonths")
                        .HasColumnName("duration_months");

                    b.Property<string>("InvoiceCycle")
                        .HasColumnName("invoice_cycle")
                        .HasMaxLength(15);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<double?>("MrrValue")
                        .HasColumnName("mrr_value");

                    b.Property<double?>("ProbabilityOfRenewal")
                        .HasColumnName("probability_of_renewal");

                    b.Property<double?>("ProjectedMrrExpansion")
                        .HasColumnName("projected_mrr_expansion");

                    b.Property<DateTimeOffset?>("RenewedAt")
                        .HasColumnName("renewed_at");

                    b.Property<DateTimeOffset?>("SignedAt")
                        .HasColumnName("signed_at");

                    b.Property<DateTimeOffset?>("StartedAt")
                        .HasColumnName("started_at");

                    b.HasKey("Id")
                        .HasName("contract_history_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_history_company_id");

                    b.HasIndex("ContractId")
                        .HasName("ix_contract_history_contract_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_history_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_history_last_modified_by");

                    b.ToTable("contract_history","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractPopulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("contract_population_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_contract_population_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_contract_population_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_contract_population_last_modified_by");

                    b.ToTable("contract_population","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsFilter")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_filter")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ObjectType")
                        .HasColumnName("object_type")
                        .HasMaxLength(100);

                    b.Property<long?>("RefId")
                        .HasColumnName("ref_id");

                    b.HasKey("Id")
                        .HasName("layout_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_last_modified_by");

                    b.ToTable("layout","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayoutSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("LayoutId")
                        .HasColumnName("layout_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(225);

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.HasKey("Id")
                        .HasName("layout_section_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_section_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_section_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_section_last_modified_by");

                    b.HasIndex("LayoutId")
                        .HasName("ix_layout_section_layout_id");

                    b.ToTable("layout_section","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayoutSectionRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("LayoutSectionId")
                        .HasColumnName("layout_section_id");

                    b.Property<long?>("Left")
                        .HasColumnName("left");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<long?>("Right")
                        .HasColumnName("right");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("layout_section_row_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_layout_section_row_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_layout_section_row_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_layout_section_row_last_modified_by");

                    b.HasIndex("LayoutSectionId")
                        .HasName("ix_layout_section_row_layout_section_id");

                    b.ToTable("layout_section_row","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Engagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AcceptanceString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acceptance")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<string>("ActualDurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("actual_duration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<string>("CostType")
                        .HasColumnName("cost_type")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Deliverables")
                        .HasColumnName("deliverables")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnName("ended_at");

                    b.Property<string>("EngagementModelDataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("engagement_model_data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long?>("EngagementModelId")
                        .HasColumnName("engagement_model_id");

                    b.Property<long?>("EngagementStatusId")
                        .HasColumnName("engagement_status_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Objectives")
                        .HasColumnName("objectives")
                        .HasColumnType("text");

                    b.Property<long>("OwnerId")
                        .HasColumnName("owner_id");

                    b.Property<string>("Prerequisites")
                        .HasColumnName("prerequisites")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("StartedAt")
                        .HasColumnName("started_at");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.Property<double?>("UnitCost")
                        .HasColumnName("unit_cost");

                    b.HasKey("Id")
                        .HasName("engagement_pkey");

                    b.HasIndex("AccountId")
                        .HasName("ix_engagement_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_engagement_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_engagement_created_by");

                    b.HasIndex("EngagementModelId")
                        .HasName("ix_engagement_engagement_model_id");

                    b.HasIndex("EngagementStatusId")
                        .HasName("ix_engagement_engagement_status_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_engagement_last_modified_by");

                    b.ToTable("engagement","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngagementModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<string>("CostType")
                        .HasColumnName("cost_type")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DefaultOwnerString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("default_owner")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("DeliverablesTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deliverables_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("ExpectedActivitiesString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_activities")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("ExpectedDurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_duration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ObjectivesTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("objectives_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("PortalBehaviorString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("portal_behavior")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("PrerequisitesTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prerequisites_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<double?>("UnitCost")
                        .HasColumnName("unit_cost");

                    b.HasKey("Id")
                        .HasName("engagement_model_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_engagement_model_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_engagement_model_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_engagement_model_last_modified_by");

                    b.ToTable("engagement_model","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngagementStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Meaning")
                        .HasColumnName("meaning")
                        .HasMaxLength(20);

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("engagement_status_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_engagement_status_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_engagement_status_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_engagement_status_last_modified_by");

                    b.ToTable("engagement_status","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ExpectedActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityStatusId")
                        .HasColumnName("activity_status_id");

                    b.Property<long>("ActivityTypeId")
                        .HasColumnName("activity_type_id");

                    b.Property<string>("AssignmentsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("assignments")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DataString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("EngagementModelId")
                        .HasColumnName("engagement_model_id");

                    b.Property<string>("ExpectedAtString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_at")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("ExpectedDurationString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expected_duration")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<double?>("ExpectedEffort")
                        .HasColumnName("expected_effort");

                    b.Property<string>("LabelsString")
                        .HasColumnName("labels")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long?>("VisibleAt")
                        .HasColumnName("visible_at");

                    b.HasKey("Id")
                        .HasName("expected_activity_pkey");

                    b.HasIndex("ActivityStatusId")
                        .HasName("ix_expected_activity_activity_status_id");

                    b.HasIndex("ActivityTypeId")
                        .HasName("ix_expected_activity_activity_type_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_expected_activity_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_expected_activity_created_by");

                    b.HasIndex("EngagementModelId")
                        .HasName("ix_expected_activity_engagement_model_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_expected_activity_last_modified_by");

                    b.ToTable("expected_activity","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.IntegrationMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Primary")
                        .HasColumnName("primary")
                        .HasMaxLength(256);

                    b.Property<string>("Secondary")
                        .HasColumnName("secondary")
                        .HasMaxLength(256);

                    b.Property<string>("Tertiary")
                        .HasColumnName("tertiary")
                        .HasMaxLength(256);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("integration_mapping_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_integration_mapping_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_integration_mapping_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_integration_mapping_last_modified_by");

                    b.ToTable("integration_mapping","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.IntegrationProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.Property<string>("ValueString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("integration_property_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_integration_property_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_integration_property_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_integration_property_last_modified_by");

                    b.ToTable("integration_property","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.InvoicePayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double>("Amount")
                        .HasColumnName("amount");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContractId")
                        .HasColumnName("contract_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DueOn")
                        .HasColumnName("due_on")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("invoice_payment_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_invoice_payment_company_id");

                    b.HasIndex("ContractId")
                        .HasName("ix_invoice_payment_contract_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_invoice_payment_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_invoice_payment_last_modified_by");

                    b.ToTable("invoice_payment","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.InvoicePaymentPopulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("invoice_payment_population_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_invoice_payment_population_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_invoice_payment_population_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_invoice_payment_population_last_modified_by");

                    b.ToTable("invoice_payment_population","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Label", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnName("color")
                        .HasMaxLength(100);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("label_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_label_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_label_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_label_last_modified_by");

                    b.ToTable("label","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Milestone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<long>("EngagementId")
                        .HasColumnName("engagement_id");

                    b.Property<bool?>("IsComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_complete")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("milestone_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_milestone_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_milestone_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_milestone_last_modified_by");

                    b.ToTable("milestone","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.MilestoneModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DescriptionTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long>("EngagementModelId")
                        .HasColumnName("engagement_model_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("TitleTranslationsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title_translations")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("milestone_model_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_milestone_model_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_milestone_model_created_by");

                    b.HasIndex("EngagementModelId")
                        .HasName("ix_milestone_model_engagement_model_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_milestone_model_last_modified_by");

                    b.ToTable("milestone_model","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.TimeEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime>("LogDate")
                        .HasColumnName("log_date")
                        .HasColumnType("date");

                    b.Property<int>("Minutes")
                        .HasColumnName("minutes");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("time_entry_pkey");

                    b.HasIndex("ActivityId")
                        .HasName("ix_time_entry_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_time_entry_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_time_entry_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_time_entry_last_modified_by");

                    b.HasIndex("UserId")
                        .HasName("ix_time_entry_user_id");

                    b.ToTable("time_entry","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.TimeEntryPopulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterCriteriaString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("filter_criteria")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("time_entry_population_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_time_entry_population_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_time_entry_population_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_time_entry_population_last_modified_by");

                    b.ToTable("time_entry_population","engage");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.Container", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ApiName")
                        .HasColumnName("api_name")
                        .HasMaxLength(255);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("ImageString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("image")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("container_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_last_modified_by");

                    b.ToTable("container","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ActualState")
                        .HasColumnName("actual_state")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ActualStateChangedAt")
                        .HasColumnName("actual_state_changed_at");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContainerId")
                        .HasColumnName("container_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("DesiredState")
                        .HasColumnName("desired_state")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("DesiredStateChangedAt")
                        .HasColumnName("desired_state_changed_at")
                        .HasColumnType("timestamptz");

                    b.Property<string>("EnvString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("env")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<int>("InstanceCount")
                        .HasColumnName("instance_count");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<string>("LastActualStatePayloadString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_actual_state_payload")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<int>("Major")
                        .HasColumnName("major");

                    b.Property<int>("Minor")
                        .HasColumnName("minor");

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasMaxLength(255);

                    b.Property<int>("Patch")
                        .HasColumnName("patch");

                    b.Property<int>("Port")
                        .HasColumnName("port");

                    b.Property<string>("RepositoryName")
                        .HasColumnName("repository_name")
                        .HasMaxLength(255);

                    b.Property<string>("Tag")
                        .HasColumnName("tag")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("container_version_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_version_company_id");

                    b.HasIndex("ContainerId")
                        .HasName("ix_container_version_container_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_version_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_version_last_modified_by");

                    b.ToTable("container_version","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionActiveHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasMaxLength(15);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContainerId")
                        .HasColumnName("container_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("TargetVersionId")
                        .HasColumnName("target_version_id");

                    b.HasKey("Id")
                        .HasName("container_version_active_history_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_version_active_history_company_id");

                    b.HasIndex("ContainerId")
                        .HasName("ix_container_version_active_history_container_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_version_active_history_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_version_active_history_last_modified_by");

                    b.HasIndex("TargetVersionId")
                        .HasName("ix_container_version_active_history_target_version_id");

                    b.ToTable("container_version_active_history","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionCapability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long>("ContainerVersionId")
                        .HasColumnName("container_version_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnName("path")
                        .HasMaxLength(255);

                    b.Property<string>("PropertiesString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("properties")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("container_version_capability_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_version_capability_company_id");

                    b.HasIndex("ContainerVersionId")
                        .HasName("ix_container_version_capability_container_version_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_version_capability_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_version_capability_last_modified_by");

                    b.ToTable("container_version_capability","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long?>("ContainerVersionId")
                        .HasColumnName("container_version_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("container_version_log_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_version_log_company_id");

                    b.HasIndex("ContainerVersionId")
                        .HasName("ix_container_version_log_container_version_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_version_log_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_version_log_last_modified_by");

                    b.ToTable("container_version_log","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<long?>("ContainerVersionCapabilityId")
                        .HasColumnName("container_version_capability_id");

                    b.Property<long?>("ContainerVersionId")
                        .HasColumnName("container_version_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("ObjectId")
                        .HasColumnName("object_id");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnName("object_type")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("container_version_reference_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_container_version_reference_company_id");

                    b.HasIndex("ContainerVersionCapabilityId")
                        .HasName("ix_container_version_reference_container_version_capability_id");

                    b.HasIndex("ContainerVersionId")
                        .HasName("ix_container_version_reference_container_version_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_container_version_reference_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_container_version_reference_last_modified_by");

                    b.ToTable("container_version_reference","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ApiUrl")
                        .HasColumnName("api_url")
                        .HasMaxLength(255);

                    b.Property<string>("AuthToken")
                        .HasColumnName("auth_token")
                        .HasColumnType("text");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Environment")
                        .HasColumnName("environment")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LoginUsername")
                        .HasColumnName("login_username")
                        .HasMaxLength(80);

                    b.Property<string[]>("NotificationEmails")
                        .HasColumnName("notification_emails");

                    b.Property<string>("RefreshToken")
                        .HasColumnName("refresh_token")
                        .HasColumnType("text");

                    b.Property<string>("TokenUrl")
                        .HasColumnName("token_url")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("sfdc_integration_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_sfdc_integration_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_sfdc_integration_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_sfdc_integration_last_modified_by");

                    b.ToTable("sfdc_integration","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationError", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("BolstraId")
                        .HasColumnName("bolstra_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("ErrorMessage")
                        .HasColumnName("error_message")
                        .HasColumnType("text");

                    b.Property<long?>("IntegrationId")
                        .HasColumnName("integration_id");

                    b.Property<long?>("IntegrationObjectId")
                        .HasColumnName("integration_object_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("SalesforceId")
                        .HasColumnName("salesforce_id")
                        .HasMaxLength(18);

                    b.Property<string>("SalesforceName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("salesforce_name")
                        .HasMaxLength(75)
                        .HasDefaultValue("");

                    b.HasKey("Id")
                        .HasName("sfdc_integration_error_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_sfdc_integration_error_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_sfdc_integration_error_created_by");

                    b.HasIndex("IntegrationId")
                        .HasName("ix_sfdc_integration_error_integration_id");

                    b.HasIndex("IntegrationObjectId")
                        .HasName("ix_sfdc_integration_error_integration_object_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_sfdc_integration_error_last_modified_by");

                    b.ToTable("sfdc_integration_error","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("FieldMappingString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("field_mapping")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long?>("IntegrationId")
                        .HasColumnName("integration_id");

                    b.Property<long?>("IntegrationTemplateId")
                        .HasColumnName("integration_template_id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("SettingsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("settings")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("SfdcObjectName")
                        .HasColumnName("sfdc_object_name")
                        .HasMaxLength(83);

                    b.Property<string>("SfdcObjectPrefix")
                        .HasColumnName("sfdc_object_prefix")
                        .HasMaxLength(3);

                    b.HasKey("Id")
                        .HasName("sfdc_integration_object_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_sfdc_integration_object_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_sfdc_integration_object_created_by");

                    b.HasIndex("IntegrationId")
                        .HasName("ix_sfdc_integration_object_integration_id");

                    b.HasIndex("IntegrationTemplateId")
                        .HasName("ix_sfdc_integration_object_integration_template_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_sfdc_integration_object_last_modified_by");

                    b.ToTable("sfdc_integration_object","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("BolstraEventName")
                        .HasColumnName("bolstra_event_name")
                        .HasMaxLength(50);

                    b.Property<string>("BolstraObjectLabel")
                        .HasColumnName("bolstra_object_label")
                        .HasMaxLength(50);

                    b.Property<string>("BolstraObjectName")
                        .HasColumnName("bolstra_object_name")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomAttributeUrl")
                        .HasColumnName("custom_attribute_url")
                        .HasMaxLength(100);

                    b.Property<string>("Direction")
                        .HasColumnName("direction")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<bool?>("MapCustomAttributes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("map_custom_attributes")
                        .HasDefaultValue(false);

                    b.Property<string>("SfdcObjectLabel")
                        .HasColumnName("sfdc_object_label")
                        .HasMaxLength(50);

                    b.Property<string>("SfdcObjectName")
                        .HasColumnName("sfdc_object_name")
                        .HasMaxLength(50);

                    b.Property<string>("SfdcObjectPrefix")
                        .HasColumnName("sfdc_object_prefix")
                        .HasMaxLength(3);

                    b.Property<string>("SfdcRequiredSelectFields")
                        .HasColumnName("sfdc_required_select_fields")
                        .HasMaxLength(255);

                    b.Property<string>("StandardFieldDescriptionString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("standard_field_description")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.HasKey("Id")
                        .HasName("sfdc_integration_template_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_sfdc_integration_template_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_sfdc_integration_template_last_modified_by");

                    b.ToTable("sfdc_integration_template","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ProductionUrl")
                        .HasColumnName("production_url")
                        .HasMaxLength(255);

                    b.Property<string>("SandboxUrl")
                        .HasColumnName("sandbox_url")
                        .HasMaxLength(255);

                    b.Property<string>("VersionNumber")
                        .HasColumnName("version_number")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("sfdc_version_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_sfdc_version_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_sfdc_version_last_modified_by");

                    b.ToTable("sfdc_version","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.Subscriber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("EventFilter")
                        .HasColumnName("event_filter")
                        .HasMaxLength(1024);

                    b.Property<bool?>("IsInternal")
                        .HasColumnName("is_internal");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("NotificationUri")
                        .HasColumnName("notification_uri")
                        .HasMaxLength(1024);

                    b.Property<string>("SubscriberKey")
                        .HasColumnName("subscriber_key")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("subscriber_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_subscriber_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_subscriber_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_subscriber_last_modified_by");

                    b.ToTable("subscriber","events");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AlternateRenditionsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("alternate_renditions")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<long?>("AttachmentKindId")
                        .HasColumnName("attachment_kind_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Filename")
                        .HasColumnName("filename")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasMaxLength(30)
                        .HasDefaultValue("file");

                    b.HasKey("Id")
                        .HasName("attachment_pkey");

                    b.HasIndex("AttachmentKindId")
                        .HasName("ix_attachment_attachment_kind_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_attachment_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_attachment_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_attachment_last_modified_by");

                    b.ToTable("attachment","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.AttachmentKind", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsSingle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_single")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("attachment_kind_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_attachment_kind_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_attachment_kind_last_modified_by");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_attachment_kind_name");

                    b.ToTable("attachment_kind","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.AttachmentReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AttachmentId")
                        .HasColumnName("attachment_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_primary")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long?>("ReferenceId")
                        .HasColumnName("reference_id");

                    b.Property<long?>("ReferenceTypeId")
                        .HasColumnName("reference_type_id");

                    b.HasKey("Id")
                        .HasName("attachment_reference_pkey");

                    b.HasIndex("AttachmentId")
                        .HasName("ix_attachment_reference_attachment_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_attachment_reference_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_attachment_reference_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_attachment_reference_last_modified_by");

                    b.HasIndex("ReferenceTypeId")
                        .HasName("ix_attachment_reference_reference_type_id");

                    b.ToTable("attachment_reference","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsSystem")
                        .HasColumnName("is_system");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Text")
                        .HasColumnName("comment")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("comment_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_comment_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_comment_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_comment_last_modified_by");

                    b.ToTable("comment","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.CommentReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CommentId")
                        .HasColumnName("comment_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_primary")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("ReferenceId")
                        .HasColumnName("reference_id");

                    b.Property<long>("ReferenceTypeId")
                        .HasColumnName("reference_type_id");

                    b.HasKey("Id")
                        .HasName("comment_reference_pkey");

                    b.HasIndex("CommentId")
                        .HasName("ix_comment_reference_comment_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_comment_reference_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_comment_reference_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_comment_reference_last_modified_by");

                    b.HasIndex("ReferenceTypeId")
                        .HasName("ix_comment_reference_reference_type_id");

                    b.ToTable("comment_reference","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ActionString")
                        .HasColumnName("action")
                        .HasMaxLength(20);

                    b.Property<long?>("ActivityId")
                        .HasColumnName("activity_id");

                    b.Property<string[]>("Bcc")
                        .HasColumnName("bcc");

                    b.Property<string[]>("Cc")
                        .HasColumnName("cc");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnName("from");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset?>("SendTime")
                        .HasColumnName("send_time");

                    b.Property<string>("StatusString")
                        .HasColumnName("status")
                        .HasMaxLength(20);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnName("subject")
                        .HasMaxLength(255);

                    b.Property<long?>("ThreadId")
                        .HasColumnName("thread_id");

                    b.Property<string[]>("To")
                        .HasColumnName("to");

                    b.Property<string>("TypeString")
                        .HasColumnName("type")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("message_pkey");

                    b.HasIndex("ActivityId")
                        .HasName("ix_message_activity_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_message_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_message_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_message_last_modified_by");

                    b.HasIndex("ThreadId")
                        .HasName("ix_message_thread_id");

                    b.ToTable("message","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.MessageTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("message_template_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_message_template_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_message_template_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_message_template_last_modified_by");

                    b.ToTable("message_template","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.ReferenceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.Property<string>("PermissionUrl")
                        .HasColumnName("permission_url")
                        .HasMaxLength(255);

                    b.Property<string>("RestUrl")
                        .HasColumnName("rest_url")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("reference_type_pkey");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_reference_type_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_reference_type_last_modified_by");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_reference_type_name");

                    b.ToTable("reference_type","file");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountAchievement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AccountHealthSettingId")
                        .HasColumnName("account_health_setting_id");

                    b.Property<DateTimeOffset?>("AchievedAt")
                        .HasColumnName("achieved_at")
                        .HasColumnType("timestamptz");

                    b.Property<long>("AchievementId")
                        .HasColumnName("achievement_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsAchieved")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_achieved")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.HasKey("Id")
                        .HasName("account_achievement_pkey");

                    b.HasIndex("AchievementId")
                        .HasName("ix_account_achievement_achievement_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_achievement_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_achievement_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_achievement_last_modified_by");

                    b.HasIndex("AccountHealthSettingId", "AchievementId")
                        .IsUnique()
                        .HasName("ix_account_achievement_account_health_setting_id_achievement_id");

                    b.ToTable("account_achievement","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long?>("DefaultHealthscoreId")
                        .HasColumnName("default_healthscore_id");

                    b.Property<string>("HealthscoresString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("healthscores")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long?>("LifecycleId")
                        .HasColumnName("lifecycle_id");

                    b.Property<DateTimeOffset?>("LifecycleStartAt")
                        .HasColumnName("lifecycle_start_at")
                        .HasColumnType("timestamptz");

                    b.HasKey("Id")
                        .HasName("account_health_setting_pkey");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasName("ix_account_health_setting_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_health_setting_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_health_setting_created_by");

                    b.HasIndex("DefaultHealthscoreId")
                        .HasName("ix_account_health_setting_default_healthscore_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_health_setting_last_modified_by");

                    b.HasIndex("LifecycleId")
                        .HasName("ix_account_health_setting_lifecycle_id");

                    b.ToTable("account_health_setting","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthscore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AccountHealthSettingId")
                        .HasColumnName("account_health_setting_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<double?>("CurrentValue")
                        .HasColumnName("current_value");

                    b.Property<long>("HealthscoreId")
                        .HasColumnName("healthscore_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Range")
                        .HasColumnName("range")
                        .HasMaxLength(15);

                    b.HasKey("Id")
                        .HasName("account_healthscore_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_healthscore_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_healthscore_created_by");

                    b.HasIndex("HealthscoreId")
                        .HasName("ix_account_healthscore_healthscore_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_healthscore_last_modified_by");

                    b.HasIndex("AccountHealthSettingId", "HealthscoreId")
                        .IsUnique()
                        .HasName("ix_account_healthscore_account_health_setting_id_healthscore_id");

                    b.ToTable("account_healthscore","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthscoreHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AccountHealthscoreId")
                        .HasColumnName("account_healthscore_id");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("ForDate")
                        .HasColumnName("for_date")
                        .HasColumnType("date");

                    b.Property<long>("HealthscoreId")
                        .HasColumnName("healthscore_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasMaxLength(75);

                    b.Property<double>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("account_healthscore_history_pkey");

                    b.HasIndex("AccountHealthscoreId")
                        .HasName("ix_account_healthscore_history_account_healthscore_id");

                    b.HasIndex("AccountId")
                        .HasName("ix_account_healthscore_history_account_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_account_healthscore_history_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_account_healthscore_history_created_by");

                    b.HasIndex("HealthscoreId")
                        .HasName("ix_account_healthscore_history_healthscore_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_account_healthscore_history_last_modified_by");

                    b.ToTable("account_healthscore_history","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Achievement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool?>("ApiOnly")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("api_only")
                        .HasDefaultValue(false);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long?>("LifestageId")
                        .HasColumnName("lifestage_id");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Question")
                        .HasColumnName("question")
                        .HasMaxLength(1024);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("achievement_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_achievement_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_achievement_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_achievement_last_modified_by");

                    b.HasIndex("LifestageId")
                        .HasName("ix_achievement_lifestage_id");

                    b.ToTable("achievement","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Healthscore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<int?>("DaysToCalculate")
                        .HasColumnName("days_to_calculate");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("EntryType")
                        .HasColumnName("entry_type")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ManualEntryQuestion")
                        .HasColumnName("manual_entry_question")
                        .HasMaxLength(1024);

                    b.Property<string>("OutOfRangeRule")
                        .HasColumnName("out_of_range_rule")
                        .HasMaxLength(100);

                    b.Property<double>("RangeBad")
                        .HasColumnName("range_bad");

                    b.Property<double>("RangeGood")
                        .HasColumnName("range_good");

                    b.Property<double>("RangeHigh")
                        .HasColumnName("range_high");

                    b.Property<double>("RangeLow")
                        .HasColumnName("range_low");

                    b.Property<bool>("RollUpToParent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roll_up_to_parent")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("healthscore_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_healthscore_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_healthscore_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_healthscore_last_modified_by");

                    b.ToTable("healthscore","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.HealthscoreComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long>("HealthscoreId")
                        .HasColumnName("healthscore_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long>("ParentHealthscoreId")
                        .HasColumnName("parent_healthscore_id");

                    b.Property<double>("Weight")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("healthscore_component_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_healthscore_component_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_healthscore_component_created_by");

                    b.HasIndex("HealthscoreId")
                        .HasName("ix_healthscore_component_healthscore_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_healthscore_component_last_modified_by");

                    b.HasIndex("ParentHealthscoreId")
                        .HasName("ix_healthscore_component_parent_healthscore_id");

                    b.ToTable("healthscore_component","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.HealthscoreImport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CompletedAt")
                        .HasColumnName("completed_at");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long>("HealthscoreId")
                        .HasColumnName("healthscore_id");

                    b.Property<int>("ImportStatus")
                        .HasColumnName("import_status");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("ProcessLog")
                        .HasColumnName("process_log")
                        .HasColumnType("text");

                    b.Property<int>("RecordsErrored")
                        .HasColumnName("records_errored");

                    b.Property<int>("RecordsImported")
                        .HasColumnName("records_imported");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(75);

                    b.HasKey("Id")
                        .HasName("healthscore_import_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_healthscore_import_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_healthscore_import_created_by");

                    b.HasIndex("HealthscoreId")
                        .HasName("ix_healthscore_import_healthscore_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_healthscore_import_last_modified_by");

                    b.ToTable("healthscore_import","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Lifecycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("lifecycle_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_lifecycle_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_lifecycle_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_lifecycle_last_modified_by");

                    b.ToTable("lifecycle","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Lifestage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<int?>("DelayWeeks")
                        .HasColumnName("delay_weeks");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<long?>("LifecycleId")
                        .HasColumnName("lifecycle_id");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("lifestage_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_lifestage_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_lifestage_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_lifestage_last_modified_by");

                    b.HasIndex("LifecycleId")
                        .HasName("ix_lifestage_lifecycle_id");

                    b.ToTable("lifestage","health");
                });

            modelBuilder.Entity("Bolstra.Api.Models.NonDB.AtRiskRevenueData", b =>
                {
                    b.Property<DateTime>("DayValue")
                        .HasColumnName("day_value");

                    b.Property<int?>("AllAccounts")
                        .HasColumnName("all_accounts");

                    b.Property<double?>("AllRevenue")
                        .HasColumnName("all_revenue");

                    b.Property<int?>("AtRiskAccounts")
                        .HasColumnName("at_risk_accounts");

                    b.Property<double?>("AtRiskRevenue")
                        .HasColumnName("at_risk_revenue");

                    b.HasKey("DayValue")
                        .HasName("at_risk_revenue_data_pkey");

                    b.ToTable("at_risk_revenue_data");
                });

            modelBuilder.Entity("Bolstra.Api.Models.NonDB.MetricsData", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("company_id");

                    b.Property<long>("Value")
                        .HasColumnName("value");

                    b.HasKey("CompanyId")
                        .HasName("metrics_data_pkey");

                    b.ToTable("metrics_data");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Public.CacheRegistry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .HasColumnName("action");

                    b.Property<long?>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("TableName")
                        .HasColumnName("table_name");

                    b.Property<string>("TableSchema")
                        .HasColumnName("table_schema");

                    b.HasKey("Id")
                        .HasName("cache_registry_pkey");

                    b.HasIndex("TableName", "TableSchema")
                        .IsUnique()
                        .HasName("ix_cache_registry_table_name_table_schema");

                    b.ToTable("cache_registry","public");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.AlembicVersion", b =>
                {
                    b.Property<string>("version_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_num")
                        .HasMaxLength(32);

                    b.HasKey("version_num")
                        .HasName("alembic_version_pkey");

                    b.ToTable("alembic_version","triggers");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.AnalyticSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AnalyticApi")
                        .HasColumnName("analytic_api")
                        .HasMaxLength(1024);

                    b.Property<long>("CategoryId")
                        .HasColumnName("category_id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("PopulationApi")
                        .HasColumnName("population_api")
                        .HasMaxLength(1024);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("analytic_source_pkey");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasName("ix_analytic_source_category_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_analytic_source_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_analytic_source_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_analytic_source_last_modified_by");

                    b.ToTable("analytic_source","triggers");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Dashboard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsPublic")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_public")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("dashboard_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_dashboard_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_dashboard_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_dashboard_last_modified_by");

                    b.ToTable("dashboard","triggers");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AnalyticSourceId")
                        .HasColumnName("analytic_source_id");

                    b.Property<string>("ChartType")
                        .HasColumnName("chart_type")
                        .HasMaxLength(10);

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<long>("DashboardId")
                        .HasColumnName("dashboard_id");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("DimensionsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dimensions")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<bool?>("IsDirty")
                        .HasColumnName("is_dirty");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTimeOffset>("LastRunAt")
                        .HasColumnName("last_run_at")
                        .HasColumnType("timestamptz");

                    b.Property<string>("MeasuresString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("measures")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<double?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("PopulationBehavior")
                        .HasColumnName("population_behavior")
                        .HasMaxLength(15);

                    b.Property<long[]>("PopulationIds")
                        .HasColumnName("population_ids");

                    b.Property<string>("SettingsString")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("settings")
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("report_pkey");

                    b.HasIndex("AnalyticSourceId")
                        .HasName("ix_report_analytic_source_id");

                    b.HasIndex("CompanyId")
                        .HasName("ix_report_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_report_created_by");

                    b.HasIndex("DashboardId")
                        .HasName("ix_report_dashboard_id");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_report_last_modified_by");

                    b.ToTable("report","triggers");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Trigger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ActionDataString")
                        .HasColumnName("action_data")
                        .HasColumnType("jsonb");

                    b.Property<long>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("FilterDataString")
                        .HasColumnName("filter_data")
                        .HasColumnType("jsonb");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("now()");

                    b.Property<long>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(256);

                    b.Property<string>("TriggerValue")
                        .HasColumnName("trigger")
                        .HasMaxLength(256);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(256);

                    b.HasKey("Id")
                        .HasName("trigger_pkey");

                    b.HasIndex("CompanyId")
                        .HasName("ix_trigger_company_id");

                    b.HasIndex("CreatedBy")
                        .HasName("ix_trigger_created_by");

                    b.HasIndex("LastModifiedBy")
                        .HasName("ix_trigger_last_modified_by");

                    b.ToTable("trigger","triggers");
                });

            modelBuilder.Entity("Bolstra.Api.Models.AccountCustomData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithOne("AccountCustomData")
                        .HasForeignKey("Bolstra.Api.Models.AccountCustomData", "AccountId")
                        .HasConstraintName("fk_account_custom_data_account_account_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_custom_data_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_custom_data_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_custom_data_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.AccountPriority", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_priority_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_priority_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_priority_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccessLog", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_access_log_company_company_id");

                    b.HasOne("Bolstra.Api.Models.Admin.CompanyUser", "CompanyUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_access_log_company_user_user_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Account", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.CompanyUser", "AccountOwner")
                        .WithMany()
                        .HasForeignKey("AccountOwnerId")
                        .HasConstraintName("fk_account_company_user_account_owner_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.AccountPriority", "AccountPriority")
                        .WithMany()
                        .HasForeignKey("AccountPriorityId")
                        .HasConstraintName("fk_account_account_priority_account_priority_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Parent")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_account_account_parent_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountCustomAttribute", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany("AccountCustomAttributes")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_custom_attribute_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_custom_attribute_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_custom_attribute_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountCustomAttributeSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_custom_attribute_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_custom_attribute_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_custom_attribute_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountFilter", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_filter_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_filter_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_filter_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountPopulation", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_population_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_population_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_population_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUser", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_account_user_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_user_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_user_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_user_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomAttribute", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany("AccountUserCustomAttributes")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_user_custom_attribute_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_user_custom_attribute_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_user_custom_attribute_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomAttributeSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_user_custom_attribute_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_user_custom_attribute_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_user_custom_attribute_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AccountUserCustomData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.AccountUser", "AccountUser")
                        .WithOne("ContactCustomData")
                        .HasForeignKey("Bolstra.Api.Models.Admin.AccountUserCustomData", "AccountUserId")
                        .HasConstraintName("fk_account_user_custom_data_account_user_account_user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_user_custom_data_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_user_custom_data_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_user_custom_data_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayout", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayoutSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.AdminLayout", "AdminLayout")
                        .WithMany("LayoutSections")
                        .HasForeignKey("LayoutId")
                        .HasConstraintName("fk_layout_section_layout_layout_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AdminLayoutSectionRow", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_section_row_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_section_row_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_section_row_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.AdminLayoutSection", "LayoutSection")
                        .WithMany("AdminLayoutSectionRows")
                        .HasForeignKey("LayoutSectionId")
                        .HasConstraintName("fk_layout_section_row_layout_section_layout_section_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AnalyticsJoinData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.AnalyticsJoinKey", "AnalyticsJoinKey")
                        .WithMany()
                        .HasForeignKey("AnalyticsJoinKeyId")
                        .HasConstraintName("fk_analytics_join_data_analytics_join_key_analytics_join_key_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.AnalyticsJoinKey", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_analytics_join_key_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_analytics_join_key_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_analytics_join_key_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Company", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyDbConfig", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_db_config_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_db_config_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.DbConfig", "DbConfig")
                        .WithMany()
                        .HasForeignKey("DbConfigId")
                        .HasConstraintName("fk_company_db_config_db_config_db_config_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_db_config_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyKey", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_key_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_key_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_key_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyUser", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_user_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.CompanyUserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_company_user_company_user_role_role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "User")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_company_user_user_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.CompanyUserRole", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_user_role_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_user_role_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_user_role_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.DbConfig", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_db_config_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_db_config_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Filter", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_filter_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_filter_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_filter_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.LicensedModule", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany("LicensedModules")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_licensed_modules_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_licensed_modules_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_licensed_modules_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("fk_licensed_modules_modules_module_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Module", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_modules_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_modules_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.Notification", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_notification_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_notification_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_notification_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_notification_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.NotificationRecipient", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_notification_recipient_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.CompanyUser", "User")
                        .WithMany()
                        .HasForeignKey("CompanyUserId")
                        .HasConstraintName("fk_notification_recipient_company_user_company_user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_notification_recipient_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_notification_recipient_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Notification", "Notification")
                        .WithMany("Recipients")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("fk_notification_recipient_notification_notification_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.ServiceKey", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_service_key_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_service_key_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Admin.User", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_user_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_user_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AccountName", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_account_name_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_name_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_name_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_name_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Activity", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_activity_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Engage.ActivityStatus", "ActivityStatus")
                        .WithMany()
                        .HasForeignKey("ActivityStatusId")
                        .HasConstraintName("fk_activity_activity_status_activity_status_id");

                    b.HasOne("Bolstra.Api.Models.Engage.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .HasConstraintName("fk_activity_activity_type_activity_type_id");

                    b.HasOne("Bolstra.Api.Models.Engage.CommunicationThread", "CommunicationThread")
                        .WithMany()
                        .HasForeignKey("CommunicationThreadId")
                        .HasConstraintName("fk_activity_communication_thread_communication_thread_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Engagement", "Engagement")
                        .WithMany()
                        .HasForeignKey("EngagementId")
                        .HasConstraintName("fk_activity_engagement_engagement_id");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("fk_activity_user_owner_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityAssignment", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany("Assignments")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_activity_assignment_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_assignment_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_assignment_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_assignment_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.CompanyUser", "CompanyUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_activity_assignment_company_user_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityBoard", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_board_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_board_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_board_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityContact", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_activity_contact_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.AccountUser", "AccountUser")
                        .WithMany()
                        .HasForeignKey("AccountUserId")
                        .HasConstraintName("fk_activity_contact_account_user_account_user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany("Contacts")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_activity_contact_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_contact_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_contact_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_contact_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomAttribute", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany("ActivityCustomAttributes")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_custom_attribute_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_custom_attribute_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_custom_attribute_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomAttributeSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_custom_attribute_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_custom_attribute_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_custom_attribute_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityCustomData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithOne("ActivityCustomData")
                        .HasForeignKey("Bolstra.Api.Models.Engage.ActivityCustomData", "ActivityId")
                        .HasConstraintName("fk_activity_custom_data_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_custom_data_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_custom_data_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_custom_data_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityFilter", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_filter_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_filter_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_filter_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityLabel", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_activity_label_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_label_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_label_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_label_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityLane", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.ActivityBoard", "ActivityBoard")
                        .WithMany()
                        .HasForeignKey("ActivityBoardId")
                        .HasConstraintName("fk_activity_lane_activity_board_activity_board_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.ActivityStatus", "ActivityStatus")
                        .WithMany("Lanes")
                        .HasForeignKey("ActivityStatusId")
                        .HasConstraintName("fk_activity_lane_activity_status_activity_status_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_lane_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_lane_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_lane_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityPopulation", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_population_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_population_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_population_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityStatus", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_status_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_status_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_status_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ActivityType", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_activity_type_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_activity_type_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_activity_type_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AnalyticsJoinData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.AnalyticsJoinKey", "AnalyticsJoinKey")
                        .WithMany()
                        .HasForeignKey("AnalyticsJoinKeyId")
                        .HasConstraintName("fk_analytics_join_data_analytics_join_key_analytics_join_key_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.AnalyticsJoinKey", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_analytics_join_key_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_analytics_join_key_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_analytics_join_key_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Checklist", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_checklist_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_checklist_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_checklist_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_checklist_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ChecklistModel", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_checklist_model_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_checklist_model_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "ExpectedActivity")
                        .WithMany()
                        .HasForeignKey("ExpectedActivityId")
                        .HasConstraintName("fk_checklist_model_activity_expected_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_checklist_model_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Color", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_color_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_color_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_color_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CommunicationThread", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_communication_thread_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_communication_thread_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Engagement", "Engagement")
                        .WithMany()
                        .HasForeignKey("EngagementId")
                        .HasConstraintName("fk_communication_thread_engagement_engagement_id");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_communication_thread_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CompanyKey", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_key_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_key_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_key_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.CompanySetting", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithOne("CompanySettings")
                        .HasForeignKey("Bolstra.Api.Models.Engage.CompanySetting", "CompanyId")
                        .HasConstraintName("fk_company_setting_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_company_setting_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_company_setting_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Contract", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany("Contracts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_contract_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomAttribute", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany("ContractCustomAttributes")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_custom_attribute_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_custom_attribute_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_custom_attribute_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomAttributeSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_custom_attribute_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_custom_attribute_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_custom_attribute_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractCustomData", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_custom_data_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Contract", "Contract")
                        .WithOne("ContractCustomData")
                        .HasForeignKey("Bolstra.Api.Models.Engage.ContractCustomData", "ContractId")
                        .HasConstraintName("fk_contract_custom_data_contract_contract_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_custom_data_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_custom_data_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractHistory", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_history_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .HasConstraintName("fk_contract_history_contract_contract_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_history_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_history_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ContractPopulation", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_contract_population_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_contract_population_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_contract_population_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayout", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayoutSection", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_section_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_section_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_section_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.EngageLayout", "EngageLayout")
                        .WithMany("LayoutSections")
                        .HasForeignKey("LayoutId")
                        .HasConstraintName("fk_layout_section_layout_layout_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngageLayoutSectionRow", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_layout_section_row_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_layout_section_row_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_layout_section_row_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.EngageLayoutSection", "LayoutSection")
                        .WithMany("EngageLayoutSectionRows")
                        .HasForeignKey("LayoutSectionId")
                        .HasConstraintName("fk_layout_section_row_layout_section_layout_section_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Engagement", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_engagement_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_engagement_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_engagement_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.EngagementModel", "EngagementModel")
                        .WithMany()
                        .HasForeignKey("EngagementModelId")
                        .HasConstraintName("fk_engagement_engagement_model_engagement_model_id");

                    b.HasOne("Bolstra.Api.Models.Engage.EngagementStatus", "EngagementStatus")
                        .WithMany()
                        .HasForeignKey("EngagementStatusId")
                        .HasConstraintName("fk_engagement_engagement_status_engagement_status_id");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_engagement_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngagementModel", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_engagement_model_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_engagement_model_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_engagement_model_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.EngagementStatus", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_engagement_status_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_engagement_status_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_engagement_status_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.ExpectedActivity", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.ActivityStatus", "ActivityStatus")
                        .WithMany()
                        .HasForeignKey("ActivityStatusId")
                        .HasConstraintName("fk_expected_activity_activity_status_activity_status_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .HasConstraintName("fk_expected_activity_activity_type_activity_type_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_expected_activity_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_expected_activity_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.EngagementModel", "EngagementModel")
                        .WithMany("ExpectedActivities")
                        .HasForeignKey("EngagementModelId")
                        .HasConstraintName("fk_expected_activity_engagement_model_engagement_model_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_expected_activity_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.IntegrationMapping", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_integration_mapping_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_integration_mapping_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_integration_mapping_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.IntegrationProperty", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_integration_property_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_integration_property_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_integration_property_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.InvoicePayment", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_invoice_payment_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .HasConstraintName("fk_invoice_payment_contract_contract_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_invoice_payment_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_invoice_payment_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.InvoicePaymentPopulation", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_invoice_payment_population_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_invoice_payment_population_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_invoice_payment_population_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Label", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_label_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_label_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_label_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.Milestone", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_milestone_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_milestone_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_milestone_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.MilestoneModel", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_milestone_model_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_milestone_model_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.EngagementModel", "EngagementModel")
                        .WithMany()
                        .HasForeignKey("EngagementModelId")
                        .HasConstraintName("fk_milestone_model_engagement_model_engagement_model_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_milestone_model_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.TimeEntry", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_time_entry_activity_activity_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_time_entry_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_time_entry_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_time_entry_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_time_entry_user_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Engage.TimeEntryPopulation", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_time_entry_population_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_time_entry_population_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_time_entry_population_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.Container", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersion", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_version_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId")
                        .HasConstraintName("fk_container_version_container_container_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_version_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_version_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionActiveHistory", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_version_active_history_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId")
                        .HasConstraintName("fk_container_version_active_history_container_container_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_version_active_history_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_version_active_history_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.ContainerVersion", "ContainerVersion")
                        .WithMany()
                        .HasForeignKey("TargetVersionId")
                        .HasConstraintName("fk_container_version_active_history_container_version_target_v~")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionCapability", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_version_capability_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.ContainerVersion", "ContainerVersion")
                        .WithMany()
                        .HasForeignKey("ContainerVersionId")
                        .HasConstraintName("fk_container_version_capability_container_version_container_ve~")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_version_capability_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_version_capability_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionLog", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_version_log_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.ContainerVersion", "ContainerVersion")
                        .WithMany()
                        .HasForeignKey("ContainerVersionId")
                        .HasConstraintName("fk_container_version_log_container_version_container_version_id");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_version_log_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_version_log_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.ContainerVersionReference", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_container_version_reference_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.ContainerVersionCapability", "ContainerVersionCapability")
                        .WithMany()
                        .HasForeignKey("ContainerVersionCapabilityId")
                        .HasConstraintName("fk_container_version_reference_container_version_capability_co~");

                    b.HasOne("Bolstra.Api.Models.Events.ContainerVersion", "ContainerVersion")
                        .WithMany()
                        .HasForeignKey("ContainerVersionId")
                        .HasConstraintName("fk_container_version_reference_container_version_container_ver~");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_container_version_reference_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_container_version_reference_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegration", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_sfdc_integration_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_sfdc_integration_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_sfdc_integration_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationError", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_sfdc_integration_error_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_sfdc_integration_error_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.SfdcIntegration", "SfdcIntegration")
                        .WithMany()
                        .HasForeignKey("IntegrationId")
                        .HasConstraintName("fk_sfdc_integration_error_sfdc_integration_integration_id");

                    b.HasOne("Bolstra.Api.Models.Events.SfdcIntegrationObject", "SfdcIntegrationObject")
                        .WithMany()
                        .HasForeignKey("IntegrationObjectId")
                        .HasConstraintName("fk_sfdc_integration_error_sfdc_integration_object_integration_~");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_sfdc_integration_error_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationObject", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_sfdc_integration_object_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_sfdc_integration_object_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Events.SfdcIntegration", "SfdcIntegration")
                        .WithMany()
                        .HasForeignKey("IntegrationId")
                        .HasConstraintName("fk_sfdc_integration_object_sfdc_integration_integration_id");

                    b.HasOne("Bolstra.Api.Models.Events.SfdcIntegrationTemplate", "SfdcIntegrationTemplate")
                        .WithMany()
                        .HasForeignKey("IntegrationTemplateId")
                        .HasConstraintName("fk_sfdc_integration_object_sfdc_integration_template_integrati~");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_sfdc_integration_object_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcIntegrationTemplate", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_sfdc_integration_template_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_sfdc_integration_template_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.SfdcVersion", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_sfdc_version_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_sfdc_version_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Events.Subscriber", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_subscriber_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_subscriber_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_subscriber_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Attachment", b =>
                {
                    b.HasOne("Bolstra.Api.Models.File.AttachmentKind", "AttachmentKind")
                        .WithMany()
                        .HasForeignKey("AttachmentKindId")
                        .HasConstraintName("fk_attachment_attachment_kind_attachment_kind_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_attachment_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_attachment_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_attachment_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.AttachmentKind", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_attachment_kind_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_attachment_kind_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.AttachmentReference", b =>
                {
                    b.HasOne("Bolstra.Api.Models.File.Attachment", "Attachment")
                        .WithMany("References")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("fk_attachment_reference_attachment_attachment_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_attachment_reference_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_attachment_reference_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_attachment_reference_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.File.ReferenceType", "ReferenceType")
                        .WithMany()
                        .HasForeignKey("ReferenceTypeId")
                        .HasConstraintName("fk_attachment_reference_reference_type_reference_type_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Comment", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_comment_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_comment_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_comment_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.CommentReference", b =>
                {
                    b.HasOne("Bolstra.Api.Models.File.Comment", "Comment")
                        .WithMany("References")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("fk_comment_reference_comment_comment_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_comment_reference_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_comment_reference_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_comment_reference_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.File.ReferenceType", "ReferenceType")
                        .WithMany()
                        .HasForeignKey("ReferenceTypeId")
                        .HasConstraintName("fk_comment_reference_reference_type_reference_type_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.Message", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Engage.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("fk_message_activity_activity_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_message_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_message_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_message_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Engage.CommunicationThread", "Thread")
                        .WithMany("Messages")
                        .HasForeignKey("ThreadId")
                        .HasConstraintName("fk_message_communication_thread_thread_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.MessageTemplate", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_message_template_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_message_template_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_message_template_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.File.ReferenceType", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_reference_type_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_reference_type_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountAchievement", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Health.AccountHealthSetting", "AccountHealthSetting")
                        .WithMany("AccountAchievements")
                        .HasForeignKey("AccountHealthSettingId")
                        .HasConstraintName("fk_account_achievement_account_health_setting_account_health_s~")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .HasConstraintName("fk_account_achievement_achievement_achievement_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_achievement_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_achievement_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_achievement_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthSetting", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithOne("Health")
                        .HasForeignKey("Bolstra.Api.Models.Health.AccountHealthSetting", "AccountId")
                        .HasConstraintName("fk_account_health_setting_account_account_id");

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_health_setting_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_health_setting_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "DefaultHealthscore")
                        .WithMany()
                        .HasForeignKey("DefaultHealthscoreId")
                        .HasConstraintName("fk_account_health_setting_healthscore_default_healthscore_id");

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_health_setting_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Lifecycle", "Lifecycle")
                        .WithMany()
                        .HasForeignKey("LifecycleId")
                        .HasConstraintName("fk_account_health_setting_lifecycle_lifecycle_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthscore", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Health.AccountHealthSetting", "AccountHealthSetting")
                        .WithMany("AccountHealthscores")
                        .HasForeignKey("AccountHealthSettingId")
                        .HasConstraintName("fk_account_healthscore_account_health_setting_account_health_s~")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_healthscore_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_healthscore_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "Healthscore")
                        .WithMany()
                        .HasForeignKey("HealthscoreId")
                        .HasConstraintName("fk_account_healthscore_healthscore_healthscore_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_healthscore_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.AccountHealthscoreHistory", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Health.AccountHealthscore", "AccountHealthscore")
                        .WithMany("History")
                        .HasForeignKey("AccountHealthscoreId")
                        .HasConstraintName("fk_account_healthscore_history_account_healthscore_account_hea~");

                    b.HasOne("Bolstra.Api.Models.Admin.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_account_healthscore_history_account_account_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_account_healthscore_history_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_account_healthscore_history_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "Healthscore")
                        .WithMany()
                        .HasForeignKey("HealthscoreId")
                        .HasConstraintName("fk_account_healthscore_history_healthscore_healthscore_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_account_healthscore_history_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Achievement", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_achievement_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_achievement_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_achievement_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Lifestage", "Lifestage")
                        .WithMany("Achievements")
                        .HasForeignKey("LifestageId")
                        .HasConstraintName("fk_achievement_lifestage_lifestage_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Healthscore", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_healthscore_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_healthscore_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_healthscore_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.HealthscoreComponent", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_healthscore_component_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_healthscore_component_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "Healthscore")
                        .WithMany("ParentComponents")
                        .HasForeignKey("HealthscoreId")
                        .HasConstraintName("fk_healthscore_component_healthscore_healthscore_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_healthscore_component_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "ParentHealthscore")
                        .WithMany("ChildComponents")
                        .HasForeignKey("ParentHealthscoreId")
                        .HasConstraintName("fk_healthscore_component_healthscore_parent_healthscore_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.HealthscoreImport", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_healthscore_import_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_healthscore_import_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Healthscore", "Healthscore")
                        .WithMany()
                        .HasForeignKey("HealthscoreId")
                        .HasConstraintName("fk_healthscore_import_healthscore_healthscore_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_healthscore_import_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Lifecycle", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_lifecycle_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_lifecycle_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_lifecycle_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Health.Lifestage", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_lifestage_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_lifestage_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_lifestage_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Health.Lifecycle", "Lifecycle")
                        .WithMany("Lifestages")
                        .HasForeignKey("LifecycleId")
                        .HasConstraintName("fk_lifestage_lifecycle_lifecycle_id");
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.AnalyticSource", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_analytic_source_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_analytic_source_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_analytic_source_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Dashboard", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_dashboard_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_dashboard_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_dashboard_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Report", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Triggers.AnalyticSource", "AnalyticSource")
                        .WithMany()
                        .HasForeignKey("AnalyticSourceId")
                        .HasConstraintName("fk_report_analytic_source_analytic_source_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_report_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_report_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Triggers.Dashboard", "Dashboard")
                        .WithMany()
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("fk_report_dashboard_dashboard_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_report_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolstra.Api.Models.Triggers.Trigger", b =>
                {
                    b.HasOne("Bolstra.Api.Models.Admin.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_trigger_company_company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_trigger_user_created_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolstra.Api.Models.Admin.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .HasConstraintName("fk_trigger_user_last_modified_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
